name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # Pin actions to immutable versions in production for supply-chain hardening.
        # Example (replace with actual commit SHA):
        # uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.x
        uses: actions/checkout@v4

      - name: Install Rust (nightly with components)
        # Consider pinning to a specific nightly date for full reproducibility, e.g. nightly-2025-08-23
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt, clippy
          targets: wasm32-unknown-unknown
          override: true

      - name: Cache cargo registry
        # Example pinned SHA for actions/cache:
        # uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.x
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo check
        run: cargo check

  wasm-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (nightly + wasm target)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-wasm

      - name: Install wasm-pack
        run: cargo install wasm-pack --locked

      - name: Ensure Cargo bin in PATH
        run: echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

      - name: Setup Firefox
        # Pin to a specific release or SHA when available to avoid tag drift
        uses: browser-actions/setup-firefox@latest

      - name: Setup Geckodriver
        # Pin to a specific release or SHA when available to avoid tag drift
        uses: browser-actions/setup-geckodriver@latest
        continue-on-error: false

      - name: Make test script executable
        run: chmod +x scripts/run-wasm-tests.sh

      - name: Run wasm-bindgen tests (headless Firefox)
        run: scripts/run-wasm-tests.sh

  trunk-build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable + wasm target)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
          override: true

      - name: Ensure wasm target is installed (redundant safety)
        run: rustup target add wasm32-unknown-unknown

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node deps
        run: npm ci

      - name: Build CSS (Tailwind)
        run: npm run build-css

      - name: Install trunk
        run: cargo install trunk --locked

      - name: Trunk build (release)
        env:
          RUST_BACKTRACE: 1
        run: |
          trunk build --release

      - name: Prepare docs directory
        run: |
          rm -rf docs
          mkdir -p docs
          cp -r dist/* docs/
          touch docs/.nojekyll

      - name: Upload Pages artifact (docs)
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000
